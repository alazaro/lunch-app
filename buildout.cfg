[buildout]
develop = .
parts =
    mkdirs
    app
    deploy_ini
    deploy_cfg
    debug_ini
    debug_cfg
    test_cfg
    test
    test_cfg
    pep8
    pylint
    uwsgi

download-cache = ${buildout:directory}/download-cache


[config]
mail_user =
mail_pass =
oauth_key = 321441931159-l1j9k2c2vblpjedjroe8g05g7um79gal.apps.googleusercontent.com
oauth_secret = QJxx0XESuZ60upWhgZpImsNT
database_uri = postgresql://localhost/lunch_app


[mkdirs]
recipe = z3c.recipe.mkdir
paths =
    ${buildout:directory}/var/log
    ${buildout:directory}/var/db
    ${buildout:directory}/var/pid


[app]
recipe = zc.recipe.egg
eggs = lunch_app
interpreter = python-console


[uwsgi]
recipe = buildout.recipe.uwsgi
xml-http = 0.0.0.0:8080
version = 2.0.8
xml-master = true
xml-enable-threads = true
xml-single-interpreter = true
xml-pidfile = ${buildout:directory}/var/pid/app.pid
xml-wsgi-file = ${buildout:directory}/src/lunch_app/script.py
xml-static-map = /static=${buildout:directory}/src/lunch_app/static
xml-pythonpath = ${buildout:directory}/src
xml-env = BUILDOUT_DIRECTORY=${buildout:directory}
extra-paths = ${buildout:eggs-directory}/*.egg
use-system-binary=1


[deploy_ini]
recipe = collective.recipe.template
input = etc/deploy.ini.in
output = ${buildout:parts-directory}/etc/${:outfile}
outfile = deploy.ini


[debug_ini]
recipe = collective.recipe.template
input = etc/debug.ini.in
output = ${buildout:parts-directory}/etc/${:outfile}
outfile = debug.ini


[common_cfg]
input =
    SECRET_KEY = 'random-secret-key'
    SESSION_PROTECTION = 'strong'
    SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = '${config:oauth_key}'
    SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = '${config:oauth_secret}'
    SOCIAL_AUTH_GOOGLE_OAUTH2_WHITELISTED_DOMAINS = 'stxnext.pl'
    SOCIAL_AUTH_LOGIN_ERROR_URL = "http://lunchapp.stxnext.pl"
    SOCIAL_AUTH_USERNAME_IS_FULL_EMAIL = True
    SOCIAL_AUTH_LOGIN_URL = '/'
    SOCIAL_AUTH_LOGIN_REDIRECT_URL = '/'
    SOCIAL_AUTH_USER_MODEL = 'lunch_app.models.User'
    SOCIAL_AUTH_AUTHENTICATION_BACKENDS = (
        'social.backends.google.GoogleOAuth2',
        )
    MAIL_USERNAME = '${config:mail_user}'
    MAIL_PASSWORD = '${config:mail_pass}'
    MAIL_USE_TLS = False
    MAIL_SERVER = 'smtp.gmail.com'
    MAIL_PORT = 465
    MAIL_USE_SSL = True
    MAIL_DEFAULT_SENDER = '${config:mail_user}'
    URL_POD_KOZIOLKIEM = 'http://www.pod-koziolkiem.pl/'
    URL_TOMAS = 'http://www.tomas.net.pl/niagara.php'


[deploy_cfg]
recipe = collective.recipe.template
output = ${buildout:parts-directory}/etc/deploy.cfg
input = inline:
    # Deployment configuration
    DEBUG = False
    SQLALCHEMY_DATABASE_URI = '${config:database_uri}'
    ${common_cfg:input}
    SENTRY_DSN = '${config:sentry_dsn}'


[debug_cfg]
recipe = collective.recipe.template
output = ${buildout:parts-directory}/etc/debug.cfg
input = inline:
    # Debugging configuration
    DEBUG = True
    SQLALCHEMY_DATABASE_URI = 'sqlite:///${buildout:directory}/var/db/lunch_app.db'
    SOCIAL_AUTH_REDIRECT_IS_HTTPS = False
    ${common_cfg:input}



[test_cfg]
recipe = collective.recipe.template
output = ${buildout:parts-directory}/etc/test.cfg
input = inline:
    # Testing configuration
    DEBUG = True
    TESTING = True
    SQLALCHEMY_DATABASE_URI = 'sqlite://'
    WTF_CSRF_ENABLED = False
    ${common_cfg:input}


[test]
recipe = pbp.recipe.noserunner
eggs = lunch_app
defaults = -v


[pep8]
recipe = zc.recipe.egg
eggs = pep8
entry-points = pep8check=pep8:_main
dirs = ['${buildout:directory}/src/lunch_app']
scripts = pep8
initialization = sys.argv.extend(${pep8:dirs})


[pylint]
recipe = zc.recipe.egg
eggs =
    pylint
    lunch_app
scripts = pylint
entry-points = pylint=pylint.lint:Run
dirs = ['${buildout:directory}/src/lunch_app']
initialization =
    sys.argv.append('--rcfile=${buildout:directory}/.pylintrc')
    sys.argv.extend(${pylint:dirs})

